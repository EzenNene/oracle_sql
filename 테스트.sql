-- 초기화
DROP TABLE DEPT;
DROP TABLE EMP;
DROP TABLE CUSTOMER;
DROP TABLE ORDERS;
DROP TABLE CATEGORIES;
DROP TABLE LOCATION;
DROP TABLE EMP2;
DROP TABLE LOCATION;

DROP TABLE BOOK;
DROP TABLE ORDE;
DROP TABLE CAL;
DROP TABLE CONTACT;
DROP TABLE GIFT;
--------------------------------------------------------------------------------

CREATE TABLE CUSTOMER (
    ID NUMBER PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    ADDRESS VARCHAR2(100)
);

INSERT INTO CUSTOMER VALUES (1, '둘리', '인천');
INSERT INTO CUSTOMER(ID, NAME) VALUES (2, '둘리');
INSERT INTO CUSTOMER(ID, NAME) VALUES (3, '홍길동');
INSERT INTO CUSTOMER(ID, NAME) VALUES (4, '또치');

-- 퀴즈3. CUSTOMER 테이블에서 모든 고객의 이름을 둘리, 주소를 인천으로 수정
UPDATE CUSTOMER SET  NAME = '둘리', ADDRESS = '인천';

DELETE FROM CUSTOMER WHERE NAME = '둘리';


--------------------------------------------------------------------------------
-- SELECT 

SELECT * FROM CUSTOMER; -- 모든 컬럼 가져온다
SELECT NAME FROM CUSTOMER; -- 해당 컬럼만 가져온다
SELECT NAME, ID FROM CUSTOMER; -- 앞에서 쓴 순서대로 보여짐 (NAME, ID)

SELECT * FROM CUSTOMER ORDER BY ID ASC; -- 오름차순
SELECT * FROM CUSTOMER ORDER BY ID DESC; -- 내림차순
SELECT * FROM CUSTOMER ORDER BY NAME ASC; -- ㄱㄴㄷ순


-- 그룹화
 
SELECT * FROM GIFT;
SELECT TYPE FROM GIFT GROUP BY TYPE; -- TYPE 컬럼으로 그룹화 (중복데이터 그룹핑)
SELECT TYPE, SUM(PRICE) AS SUM FROM GIFT GROUP BY TYPE; -- TYPE 컬럼으로 그룹화 (중복데이터 그룹핑)
SELECT TYPE, COUNT(NAME) AS COUNT FROM GIFT GROUP BY TYPE;

-- 조건 검색
-- 비교 연산자
SELECT * FROM CUSTOMER WHERE ID=1;
SELECT * FROM CUSTOMER WHERE ID > 1;
SELECT * FROM CUSTOMER WHERE ID < 4;
SELECT * FROM CUSTOMER WHERE ID != 1;

SELECT * FROM CUSTOMER WHERE NAME = '둘리';
SELECT * FROM CUSTOMER WHERE NAME > '둘리';

SELECT * FROM CUSTOMER;
SELECT * FROM CUSTOMER WHERE NAME = '둘리' AND ADDRESS = '서울';
SELECT * FROM CUSTOMER WHERE ADDRESS = '인천' OR ADDRESS = '서울';
SELECT * FROM CUSTOMER WHERE NOT ADDRESS = '서울'; -- 주소가 NULL인 레코드 제외

SELECT * FROM ORDERS;
SELECT ORDER_ID + SALESMAN_ID AS PLUS FROM ORDERS;
SELECT (ORDER_ID + SALESMAN_ID) * ORDER_ID AS PLUS FROM ORDERS;

SELECT '이름: ' || NAME || '입니다' AS INTRO FROM CUSTOMER;

-- SELECT * FROM ORDER WHERE DATE

--------------------------------------------------------------------------------

SELECT * FROM BOOK;
SELECT * FROM BOOK WHERE PRICE = 11000;
SELECT * FROM BOOK WHERE PRICE = 25000;
SELECT * FROM BOOK WHERE PRICE > 30000;
SELECT * FROM BOOK WHERE PRICE >= 10000 AND PRICE <= 30000;
SELECT * FROM BOOK WHERE PUBLISHER = '한빛미디어' OR PUBLISHER = '생능출판';

SELECT * FROM ORDERS;
SELECT * FROM ORDERS WHERE ORDER_DATE >= '2022/01/02';
SELECT * FROM ORDERS WHERE ORDER_DATE >= TO_DATE('20220102', 'YYYYMMDD');
SELECT * FROM ORDERS WHERE ORDER_DATE = '2022/01/01';
SELECT * FROM ORDERS WHERE ORDER_DATE < SYSDATE; -- 현재날짜

SELECT * FROM CUSTOMER WHERE ID BETWEEN 2 AND 4;
SELECT * FROM CUSTOMER WHERE ID NOT BETWEEN 2 AND 4;
SELECT * FROM CUSTOMER WHERE ID IN(1,2,3);
SELECT * FROM CUSTOMER WHERE ID NOT IN (1,2,3);

SELECT * FROM CUSTOMER WHERE NAME LIKE '둘%'; -- '둘'로 시작하는 문자열
SELECT * FROM CUSTOMER WHERE NAME LIKE '%길%'; -- 중간에 '길'이 있는 문자열
SELECT * FROM CUSTOMER WHERE NAME LIKE '%치'; -- '치'로 끝나는 문자열

SELECT * FROM CUSTOMER WHERE ADDRESS IS NULL;
SELECT * FROM CUSTOMER WHERE ADDRESS IS NOT NULL;

--------------------------------------------------------------------------------

SELECT * FROM CONTACTS;
SELECT * FROM CONTACTS WHERE PHONE LIKE '%2341';
SELECT * FROM CONTACTS WHERE PHONE LIKE '%3171%';
SELECT * FROM CONTACTS WHERE EMAIL LIKE '%naver.com' AND PHONE IS NULL;

SELECT * FROM GIFT;
SELECT * FROM GIFT WHERE NAME LIKE '%용품%';
SELECT * FROM GIFT WHERE NAME LIKE '%세트' AND PRICE <= 300000;

--------------------------------------------------------------------------------

-- 함수
SELECT CHR(65) FROM DUAL;
SELECT UPPER(EMAIL) FROM CONTACTS;
SELECT LTRIM('      JENNIE') FROM DUAL;
SELECT LTRIM('블랙핑크','블랙') FROM DUAL;

SELECT RTRIM('JENNIE        ') FROM DUAL;
SELECT RTRIM('블랙핑크','핑크') FROM DUAL;

SELECT TRIM('       JEN     NIE      ') FROM DUAL;
SELECT TRIM(LEADING '블' FROM '블랙핑크') FROM DUAL;
SELECT TRIM(TRAILING '크' FROM '블랙핑크') FROM DUAL;
SELECT TRIM(BOTH '블' FROM '블랙핑크블') FROM DUAL;

SELECT SUBSTR('블랙핑크제니', 3, 2) FROM DUAL;
SELECT SUBSTR('블랙핑크제니', 3) FROM DUAL;
SELECT LENGTH('블랙핑크') FROM DUAL;

SELECT REPLACE ('블랙핑크제니', '제니', '지수') FROM DUAL; 
--------------------------------------------------------------------------------
SELECT ABS (-1) FROM DUAL;
SELECT SIGN (0) FROM DUAL;

SELECT ROUND (163.76, 1) FROM DUAL;
SELECT TRUNC (54.29, -2) FROM DUAL;
SELECT CEIL (54.29) FROM DUAL;
SELECT FLOOR (54.29) FROM DUAL;
SELECT MOD (15, 7) FROM DUAL;

SELECT EXTRACT (YEAR FROM ORDER_DATE) AS YEAR FROM ORDERS; --년도만 뽑기

SELECT ADD_MONTHS(TO_DATE('2021-12-31', 'YYYY-MM-DD'), -1) AS PRE FROM DUAL;

SELECT TO_NUMBER('ASA') FROM DUAL;
SELECT TO_CHAR(1234) FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD') FROM DUAL;

SELECT NAME, NVL(ADDRESS, '주소 없음') AS ADD FROM CUSTOMER;
SELECT NAME, NULLIF(ADDRESS, '인천')  AS ADDRESS FROM CUSTOMER;

SELECT NAME, COALESCE(NAME, ADDRESS) AS AD FROM CUSTOMER;

SELECT ID, DECODE (ID, 1, 'BLUE', 2, 'RED', 3, 'YELLOW', 4, 'BLAKC', 5, 'WHITE')
FROM CUSTOMER;

SELECT ID,
    CASE WHEN ID = 1 THEN'BLUE'
        WHEN ID = 2 THEN'RED'
        WHEN ID = 3 THEN'YELLOW'
        WHEN ID = 4 THEN'BLACK'
    ELSE 'WHITE'
    END AS TEST
FROM CUSTOMER;
--------------------------------------------------------------------------------

-- 함수 퀴즈

SELECT MOD (-15,0) FROM DUAL;
SELECT RTRIM (LTRIM(' SQ L D ')) FROM DUAL;

SELECT ROUND (17.5) FROM DUAL;
SELECT CEIL (17.5) FROM DUAL;
SELECT FLOOR (17.5) FROM DUAL;
SELECT TRUNC (1.5) FROM DUAL;

SELECT ADD_MONTHS(DATE '2022-01-31', 1) FROM DUAL;

SELECT NAME,
    CASE WHEN NAME = '둘리' THEN 'BLUE'
    WHEN NAME = '또치' THEN 'RED'
    ELSE 'WHITE'
    END AS TEST
FROM CUSTOMER;

--------------------------------------------------------------------------------
CREATE TABLE EMP(
    NO NUMBER,
    NAME VARCHAR2(20),
    AGE NUMBER,
    SALARY NUMBER
);

CREATE TABLE CUSTOMER (
    ID NUMBER PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    ADDRESS VARCHAR2(100)
);

CREATE TABLE ORDERS(
    ORDER_ID NUMBER PRIMARY KEY,
    SALESMAN_ID NUMBER,
    ORDER_DATE DATE NOT NULL
);

CREATE TABLE CATEGORIES (
    CATEGORY_ID NUMBER PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(100)
);

CREATE TABLE LOCATION (
    LOCATION_ID NUMBER PRIMARY KEY,
    ADDRESS VARCHAR2(255),
    POSTAL_CODE VARCHAR2(20),
    CITY VARCHAR2 (50)
);

CREATE TABLE EMP2 (
    EMPNO NUMBER(5) NOT NULL, -- 5자리의 정수
    NUM1 NUMBER(5), -- 5자리의 정수
    NUM2 NUMBER(5,2), -- 5자리의 숫자(정수 3자리, 소수점 2자리 -> 소수점 이하 3번째 자리에서 반올림)
    NUM3 NUMBER(7, -2) -- 5자리의 숫자(소수점 왼쪽 첫자리가 반올림)
);

INSERT INTO EMP2 VALUES(12345, 12345, 123.125, 231234.1);

--INSERT 문

INSERT INTO CUSTOMER(ID, NAME, ADDRESS) VALUES (1, '둘리', '인천'); 
INSERT INTO CUSTOMER(ID, NAME) VALUES (3, '또치');
-- INSERT INTO CUSTOMER(ID, ADDRESS) VALUES (4, '서울'); 
-- NULLABLE 이 NO인 경우는 반드시 데이터를 넣어줘야한다

INSERT INTO CUSTOMER VALUES (4, '둘리', ''); -- 주소에 공백을 넣음(NULL)
INSERT INTO CUSTOMER VALUES (5, '홍길동', NULL);

INSERT INTO CUSTOMER (ID, NAME) VALUES (3, '홍길동');
-- ID컬럼은 PK키 이므로 중복되는 값이 올 수 없다.

INSERT INTO CUSTOMER (ID) VALUES(6); 
-- NAME은 NULL이 들어가게 된다.
-- 하지만 NAME은 NOT NULL이다

-- 일부컬럼만사용
INSERT INTO CUSTOMER VALUES (2, '둘리', '인천'); 
-- 전체컬럼을 다 사용할 경우

select * from nls_database_parameters where parameter = 'NLS_CHARACTERSET';



-- ALTER 문 

-- 예제1. CUSTOMER 테이블에 성별 컬럼 추가
ALTER TABLE CUSTOMER ADD GENDER VARCHAR2(9);	-- 컬럼 추가

-- 예제2. 컬럼이름 바꾸기
ALTER TABLE CUSTOMER RENAME COLUMN GENDER TO GEN; -- 이름 변경
ALTER TABLE CUSTOMER RENAME COLUMN GEN TO GENDER; -- 원복

-- 예제3. 컬럼크기 바꾸기
ALTER TABLE CUSTOMER MODIFY GENDER VARCHAR2(100);
ALTER TABLE CUSTOMER MODIFY GENDER VARCHAR2(100) DEFAULT 'NONE' NOT NULL;

-- 예제4. 컬럼 자료형/제약조건 바꾸기
ALTER TABLE CUSTOMER MODIFY GENDER NUMBER;	-- 자료형 변경
ALTER TABLE CUSTOMER MODIFY GENDER NOT NULL;    -- NOT NULL 제약조건 변경

-- 예제5. 컬럼에 설명 달기
COMMENT ON COLUMN CUSTOMER.GENDER IS '성별';  -- 설명 달기

-- 예제6. 컬럼 삭제

ALTER TABLE CUSTOMER DROP COLUMN GENDER;


-- 퀴즈

ALTER TABLE EMP MODIFY SALARY NOT NULL;
COMMENT ON COLUMN EMP.NO IS '123';  -- 설명 달기
COMMENT ON COLUMN EMP.NAME IS '123';  -- 설명 달기
COMMENT ON COLUMN EMP.AGE IS '123';  -- 설명 달기
COMMENT ON COLUMN EMP.SALARY IS '123';  -- 설명 달기

ALTER TABLE ORDERS ADD CUSTOMER_NAME VARCHAR(50) NOT NULL;	-- 컬럼 추가
ALTER TABLE ORDERS MODIFY SALESMAN_ID VARCHAR(50);	-- 자료형 변경
ALTER TABLE ORDERS RENAME COLUMN SALESMAN_ID TO SALESMAN_NAME; -- 이름 변경
ALTER TABLE ORDERS MODIFY ORDER_DATE NULL;    -- NOT NULL 제약조건 변경

COMMENT ON COLUMN ORDERS.ORDER_ID IS '123';  -- 설명 달기
COMMENT ON COLUMN ORDERS.SALESMAN_NAME IS '123';  -- 설명 달기
COMMENT ON COLUMN ORDERS.ORDER_DATE IS '123';  -- 설명 달기
COMMENT ON COLUMN ORDERS.CUSTOMER_NAME IS '123';  -- 설명 달기

INSERT INTO ORDERS (ORDER_ID, SALESMAN_ID, ORDER_DATE) VALUES (1001, 1002, SYSDATE);
INSERT INTO ORDERS (ORDER_ID, SALESMAN_ID, ORDER_DATE) VALUES (1002, 1002, '2022-08-27');
INSERT INTO ORDERS (ORDER_ID, SALESMAN_ID, ORDER_DATE) VALUES (1003, 1002, TO_DATE('2022-8-27', 'YYYY-MM-DD'));
INSERT INTO ORDERS (ORDER_ID, SALESMAN_ID, ORDER_DATE) VALUES (1004, 1002, TO_DATE('2022-8-27 10:10:10', 'YYYY-MM-DD HH24:MI:SS'));

-- 데이터 추가 예제


CREATE TABLE BOOK(
    BOOK_NO NUMBER,
    TITLE VARCHAR2(100),
    PUBLISHER VARCHAR2(100),
    PRICE NUMBER
);

CREATE TABLE ORDE(
    NO NUMBER,
    NAME VARCHAR2(50),
    AGE NUMBER
);
    
INSERT INTO BOOK (BOOK_NO, TITLE, PUBLISHER, PRICE) VALUES (1, '역사1', '상상마당', 30000);
INSERT INTO BOOK (BOOK_NO, TITLE, PUBLISHER, PRICE) VALUES (2, '역사2', '상상마당', 30000);
INSERT INTO BOOK (BOOK_NO, TITLE, PUBLISHER, PRICE) VALUES (3, '스프링웹프로젝트', '한빛미디어', 50000);
INSERT INTO BOOK (BOOK_NO, TITLE, PUBLISHER, PRICE) VALUES (4, '자바개발도서', '생능출판', NULL);

INSERT INTO ORDE (NO, NAME, AGE) VALUES (NULL, NULL , NULL);
INSERT INTO ORDE (NO, NAME, AGE) VALUES (1, NULL , NULL);
INSERT INTO ORDE (NO, NAME, AGE) VALUES (NULL, '둘리', 10);
INSERT INTO ORDE (NO, NAME, AGE) VALUES (1, '둘리', 10);
INSERT INTO ORDE (NO, NAME, AGE) VALUES (1, '둘리', 10);

CREATE TABLE CONTACT (
    CONTACT_NO NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2 (10),
    LAST_NAME VARCHAR2 (10),
    EMAIL VARCHAR2 (50),
    PHONE VARCHAR2 (50)
);

INSERT INTO CONTACT VALUES (1,'이','서연','flor.stone@gmail.com','010-3171-2341');
INSERT INTO CONTACT VALUES (2,'이','시우','lavera.emerson@gmail.com','010-3171-4111');
INSERT INTO CONTACT VALUES (3,'김','지호','shyla.ortiz@gmail.com','010-3171-4126');
INSERT INTO CONTACT VALUES (4,'김','윤서','jeni.levy@gmail.com','010-8121-2341');
INSERT INTO CONTACT VALUES (5,'최','수아','fern.head@gmail.com', NULL);

CREATE TABLE CAL (
    MONTH VARCHAR2(10),
    DAY_WEEK VARCHAR2(10),
    DAY VARCHAR2(10)
);

INSERT INTO CAL VALUES (1, '일', 1);
INSERT INTO CAL VALUES (1, '월', 2);
INSERT INTO CAL VALUES (1, '화', 3);
INSERT INTO CAL VALUES (1, '수', 4);
INSERT INTO CAL VALUES (1, '목', 5);
INSERT INTO CAL VALUES (1, '금', 6);
INSERT INTO CAL VALUES (1, '토', 7);

CREATE TABLE GIFT (
    NO NUMBER,
    NAME VARCHAR2(20),
    PRICE NUMBER
);

INSERT INTO GIFT VALUES (1, '참치세트', 7);
INSERT INTO GIFT VALUES (1, '참치세트', 7);





-- UPDATE

UPDATE CUSTOMER SET ADDRESS = '서울' WHERE ID=2; --CUSTOMER 테이블에서 ID 가 2인 행의 ADDRESS
UPDATE CUSTOMER SET NAME = '훈이', ADDRESS = '제주도' WHERE ID=3;

-- DELETE

DELETE FROM CUSTOMER WHERE NAME = '둘리';
DELETE FROM CUSTOMER; -- 전체 행 삭제









