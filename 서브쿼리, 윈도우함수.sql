SELECT *
FROM ACADEMY_A
WHERE STUDENT_NAME = (  SELECT STUDENT_NAME
                        FROM ACADEMY_B
                        WHERE STUDENT_NO = 1003
                        ); -- 비연관
    
SELECT *
FROM ACADEMY_A T1
WHERE STUDENT_NAME = (  SELECT T2.STUDENT_NAME
                        FROM ACADEMY_B T2
                        WHERE T2.STUDENT_NO = T1.STUDENT_NO
                        ); -- 연관
                    
SELECT *
FROM ACADEMY_B
WHERE STUDENT_NAME =
(SELECT STUDENT_NAME
FROM ACADEMY_B
WHERE STUDENT_NO = 1003);

SELECT *
FROM ACADEMY_A
WHERE STUDENT_NAME IN -- 다중행 서브쿼리
(SELECT STUDENT_NAME
FROM ACADEMY_B
WHERE STUDENT_NO = 1003 OR STUDENT_NO = 1004);

-- 다중 컬럼 서브쿼리

SELECT * FROM ACADEMY_A
WHERE (STUDENT_NAME, STUDENT_NO) IN
(SELECT STUDENT_NAME, STUDENT_NO -- 서브쿼리
FROM ACADEMY_B
WHERE STUDENT_NO = 1003 OR STUDENT_NO = 1004);

SELECT TYPE, COUNT(NAME) AS COUNT FROM GIFT
GROUP BY TYPE
HAVING COUNT (NAME) >= 2
ORDER BY TYPE ASC;

-- RANK
SELECT STUDENT_NAME, SCORE, RANK() OVER(ORDER BY SCORE ASC) --SCORE 오더바이 내림차순
FROM STUDENT_GRADE;

-- RANK
SELECT STUDENT_NAME, SCORE, RANK() OVER(ORDER BY SCORE DESC) --SCORE 오더바이 오름차순
FROM STUDENT_GRADE;

-- DENSE_RANK
SELECT STUDENT_NAME, SCORE, DENSE_RANK() OVER(ORDER BY SCORE DESC) -- DENSE_RANK
FROM STUDENT_GRADE;

-- ROW_NUMBER
SELECT STUDENT_NAME, SCORE, ROW_NUMBER() OVER(ORDER BY SCORE DESC) 
FROM STUDENT_GRADE;



-- 집계함수
SELECT TYPE, SUM(PRICE) AS SUM FROM GIFT GROUP BY TYPE;
SELECT TYPE, PRICE, SUM(PRICE) OVER(PARTITION BY TYPE) AS SUM FROM GIFT;
SELECT TYPE, MAX(PRICE) AS MAX FROM GIFT GROUP BY TYPE;









